# Generated by Django 5.1.1 on 2025-03-27 15:57

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('telegram_id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(default='Addis Ababa, Ethiopia')),
                ('user_type', models.CharField(choices=[('user', 'User'), ('agent', 'Agent'), ('owner', 'Owner')], default='user', max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('legal_document', models.FileField(blank=True, null=True, upload_to='do/legal_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('for_property', models.CharField(choices=[('sale', 'For Sale'), ('rent', 'For Rent'), ('investment', 'For Investment')], max_length=10)),
                ('type_property', models.CharField(choices=[('residential', 'Residential')], max_length=12)),
                ('usage', models.CharField(choices=[('villa', 'Villa'), ('apartmenent', 'Apartment'), ('duplex', 'Duplex'), ('condominium', 'Condominium'), ('townhouse', 'TownHouse'), ('other', 'Other')], max_length=12)),
                ('country', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('subcity_zone', models.CharField(max_length=100)),
                ('woreda', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('floor_level', models.CharField(max_length=20)),
                ('total_area', models.FloatField()),
                ('area', models.FloatField()),
                ('google_map_link', models.URLField()),
                ('living_rooms', models.IntegerField()),
                ('bedrooms', models.IntegerField()),
                ('bathrooms', models.IntegerField()),
                ('kitchens', models.IntegerField()),
                ('built_date', models.DateField()),
                ('number_of_balconies', models.IntegerField()),
                ('average_price_per_square_meter', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('computing_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('features_and_amenities', models.CharField(choices=[('finished', 'Finished'), ('semi_finished', 'Semi-finished'), ('furnished', 'Furnished')], max_length=20)),
                ('heating_type', models.CharField(choices=[('gas', 'Gas'), ('electric', 'Electric')], max_length=20)),
                ('cooling', models.CharField(choices=[('AC', 'AC'), ('electric', 'Electric')], max_length=20)),
                ('nearest_residential', models.TextField()),
                ('own_description', models.TextField()),
                ('link_to_video_or_image', models.URLField(blank=True, null=True)),
                ('ownership_of_property', models.FileField(upload_to='do/ownership_files/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed')], default='pending', max_length=10)),
                ('kitchen_appliances', models.CharField(blank=True, max_length=255, null=True)),
                ('laundry_facilities', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='state.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(default='123456789', max_length=255)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(default='John Doe', max_length=255)),
                ('email', models.EmailField(default='mail@state.et', max_length=254)),
                ('phone_number', models.CharField(default='+251911223344', max_length=15)),
                ('tour_date', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=9)),
                ('tour_time', models.IntegerField(choices=[(1, '1 AM'), (2, '2 AM'), (3, '3 AM'), (4, '4 AM'), (5, '5 AM'), (6, '6 AM'), (7, '7 AM'), (8, '8 AM'), (9, '9 AM'), (10, '10 AM'), (11, '11 AM'), (12, '12 PM')], default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed')], default='pending', max_length=10)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='state.property')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_post_url', models.URLField(blank=True, max_length=255, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='state.customer')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='state.property')),
            ],
            options={
                'unique_together': {('customer', 'property')},
            },
        ),
    ]
